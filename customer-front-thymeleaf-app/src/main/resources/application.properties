# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/Oauth2-OIDC?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
db=mysql
server.port=8081
app.client.url=http://localhost:8888

#Pour une application website

#spring.security.oauth2.client.registration.google.clientId=1082159312465-nn8ed49ku3rod6nk7pob3bq0ot3ipbnc.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.provider.github.user-name-attribute = login

#Pour une application desktop

spring.security.oauth2.client.registration.google.clientId=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.provider.google.user-name-attribute = email


spring.security.oauth2.client.registration.github.clientId=
spring.security.oauth2.client.registration.github.client-secret=
spring.security.oauth2.client.provider.github.user-name-attribute = login


spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=
spring.security.oauth2.client.registration.keycloak.client-secret=
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/sdia-customer-client
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/sdia-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
